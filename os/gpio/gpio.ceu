#include "gpio.h"

#define N_PINS 14

var u16 pins_m = 0xFFFF;   // all OUTPUT
var u16 pins_v = 0x0000;

input (u8 pin, u8 mode)=>void PIN_MODE do
    _pinMode(pin, mode);
    _bitWrite(this.pins_m, pin, mode);

    // save "pin" current value
    if mode == _INPUT then
        _bitWrite(this.pins_v, pin, _digitalRead(pin));
    end
end

input (u8 pin, u8 val)=>void DIGITAL_WRITE do
    _digitalWrite(pin, val);
end

output (u8,int) DIGITAL_CHANGED;

#define DT 50     // avoid flood of DIGITAL_CHANGED

every (DT)ms do
    async (pins_v, pins_m) do
        loop i, N_PINS do
            if _bitRead(pins_m,i) == _INPUT then
                var int v = _digitalRead(i);    // returns "int"
                if v != _bitRead(pins_v,i) then
                    _bitWrite(pins_v, i, v);
                    emit DIGITAL_CHANGED => (i,v);
                end
            end
        end
    end
end
