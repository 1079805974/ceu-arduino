// SHELL
output (void** apps, int n)=>void APPS;
output (char* buf, int n)  =>void COMMAND;

// SERIAL
output (int)      =>void SERIAL_BEGIN;
output (void)     =>void SERIAL_END;
output (char*,int)=>void SERIAL_WRITE;
input int SERIAL_READ;

native nohold _strlen(), _strncat();
native do
    ##include <string.h>

    extern int SERIAL_SIZE;
    extern void serial_init (tceu_app* app);
    extern int SHELL_SIZE;
    extern void shell_init (tceu_app* app);
    extern int S2S_SIZE;
    extern void s2s_init (tceu_app* app);

    char serial_data[100];   // TODO: = malloc(GPIO_SIZE);
    char shell_data[100];   // TODO: = malloc(GPIO_SIZE);
    char s2s_data[100];   // TODO: = malloc(GPIO_SIZE);

    tceu_app serial;
    tceu_app shell;
    tceu_app s2s;

    void* APPS[] = { &serial, &shell, &s2s, NULL,
                     NULL, NULL, NULL, NULL, NULL, NULL };

    tceu_lnk lnk1 = { &s2s,1    ,  &shell,245, NULL };
    tceu_lnk lnk2 = { &s2s,2    ,  &shell,244, NULL };

    tceu_lnk lnk3 = { &s2s,3    ,  &serial,245, NULL };
    tceu_lnk lnk4 = { &s2s,4    ,  &serial,244, NULL };
    tceu_lnk lnk5 = { &s2s,5    ,  &serial,243, NULL };
    tceu_lnk lnk6 = { &serial,1 ,  &s2s,240, NULL };

    void MAIN (void) {
        serial.data = (tceu_org*) serial_data;
        serial.init = serial_init;
        serial.sys_vec = CEU_SYS_VEC;

        shell.data = (tceu_org*) shell_data;
        shell.init = shell_init;
        shell.sys_vec = CEU_SYS_VEC;

        s2s.data = (tceu_org*) s2s_data;
        s2s.init = s2s_init;
        s2s.sys_vec = CEU_SYS_VEC;

        ceu_sys_link(&lnk1);
        ceu_sys_link(&lnk2);
        ceu_sys_start(&shell);

        ceu_sys_link(&lnk3);
        ceu_sys_link(&lnk4);
		ceu_sys_link(&lnk5);
        ceu_sys_link(&lnk6);
		ceu_sys_start(&serial);

        ceu_sys_start(&s2s);
    }

/*
    // SERIAL
	#define CEU_IN_OS_STOP 246
	#define CEU_IN_SERIAL_BEGIN 245
	#define CEU_IN_SERIAL_END 244
	#define CEU_IN_SERIAL_WRITE 243
	#define CEU_OUT_SERIAL_READ 1

	// SHELL
	#define CEU_IN_OS_STOP 246
	#define CEU_IN_APPS 245
	#define CEU_IN_COMMAND 244

    // S2S
	#define CEU_IN_OS_STOP 246
	#define CEU_OUT_APPS 1
	#define CEU_OUT_COMMAND 2
	#define CEU_OUT_SERIAL_BEGIN 3
	#define CEU_OUT_SERIAL_END 4
	#define CEU_OUT_SERIAL_WRITE 5
	#define CEU_IN_SERIAL_READ 240

*/

end

call APPS => (_APPS, 10);

call SERIAL_BEGIN => 9600;

loop do
	var char[20] cmd;
	loop i, 18 do
        var char v = await SERIAL_READ;
		cmd[i] = v;
        if v == '\n' then
			cmd[i+1] = '\0';
            break;
        end
    end
	cmd[18] = '\n';
	cmd[19] = '\0';
	call COMMAND => (cmd,20);

	_strncat(cmd, "\n", 20);
	call SERIAL_WRITE => (cmd,_strlen(cmd));
end

call SERIAL_END;
