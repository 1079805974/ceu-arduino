input void GD_REDRAW;
input (int,int,int) GD_TOUCH;

native do
    #include "nightstrike_welcome_assets.h"
    #include "nightstrike_1_assets.h"
    
    Streamer stream;
    
    static PROGMEM prog_uchar soldier_a[] = {0,0,0,1,1,2,2,3,3,4,4,4,5,5,6,6,7,7};
    
    #define SOLDIER_LEFT   (-SOLDIER_RUN_WIDTH / 2)
    #define SOLDIER_RIGHT  (480 + (SOLDIER_RUN_WIDTH / 2))
    static void blocktext(int x, int y, byte font, const char *s)
    {
      GD.SaveContext();
      GD.ColorRGB(0x000000);
      GD.cmd_text(x-1, y-1, font, 0, s);
      GD.cmd_text(x+1, y-1, font, 0, s);
      GD.cmd_text(x-1, y+1, font, 0, s);
      GD.cmd_text(x+1, y+1, font, 0, s);
      GD.RestoreContext();

      GD.cmd_text(x, y, font, 0, s);
    }
    
    void draw_dxt1(byte color_handle, byte bit_handle)
    {
      GD.Begin(BITMAPS);

      GD.BlendFunc(ONE, ZERO);
      GD.ColorA(0x55);
      GD.Vertex2ii(0, 0, bit_handle, 0);

      GD.BlendFunc(ONE, ONE);
      GD.ColorA(0xaa);
      GD.Vertex2ii(0, 0, bit_handle, 1);

      GD.ColorMask(1,1,1,0);
      GD.cmd_scale(F16(4), F16(4));
      GD.cmd_setmatrix();

      GD.BlendFunc(DST_ALPHA, ZERO);
      GD.Vertex2ii(0, 0, color_handle, 1);

      GD.BlendFunc(ONE_MINUS_DST_ALPHA, ONE);
      GD.Vertex2ii(0, 0, color_handle, 0);

      GD.RestoreContext();
    }
    
    void vertex(byte cell, byte scale, const shape_t *shape, int x, int y) {
        int x0, y0;
        x0 = x - (shape->w >> 1) * scale;
        y0 = y - (shape->h >> 1) * scale;
        if (((x0 | y0) & 511) == 0) {
          GD.Vertex2ii(x0, y0, shape->handle, cell);
        } else {
          GD.BitmapHandle(shape->handle);
          GD.Cell(cell);
          GD.Vertex2f(x0 << 4, y0 << 4);
        }
      }
      
      void load_level(int n){

        GD.Clear();
        GD.cmd_text(240, 110, 29, OPT_CENTER, "LEVEL");
        GD.cmd_number(240, 145, 31, OPT_CENTER, n + 1);
        GD.swap();
        GD.finish();

        char filename[] = "night#.gd2";
        filename[5] = '0' + (n % 5);
        GD.load(filename);
      }
    
end

_GD.load("nightw.gd2");


/*
/// THE OPENING SEQUENCE

var int on? = true;
par/or do
    every 500ms do
        on? = not on?;
    end
with
    every GD_REDRAW do
        _draw_dxt1(BACKGROUND_COLOR_HANDLE, BACKGROUND_BITS_HANDLE);
        _GD.ColorRGB(0xd7f2fd);
        _blocktext(25, 16, WELCOME_DISPLAYFONT_HANDLE, "NIGHTSTRIKE");
        _GD.Tag(100);
        if(on?) then
            _blocktext(51, 114, WELCOME_DISPLAYFONT_HANDLE, "START");
        end
    end
with
    var int x,y,tag;
    loop do
        (x,y,tag) = await GD_TOUCH;
        if(tag == 100) then
            break;
        end
    end
end

/// END OF OPENING SEQUENCE
*/

class Soldier with
do
    var int x,y;
    native do
        const shape_t *shape;
    end
    _shape = &_SOLDIER_RUN_SHAPE;
    x = _SOLDIER_RIGHT - 100;
    y = 272 - SOLDIER_RUN_HEIGHT;
    var int t = 0;
    every GD_REDRAW do
        _GD.Tag(1);
        _draw_dxt1(BACKGROUND_COLOR_HANDLE, BACKGROUND_BITS_HANDLE);
        _GD.ColorRGB(0xd7f2fd);
        _GD.TagMask(0);
        _GD.Begin(_BITMAPS);
        _vertex(_pgm_read_byte(_soldier_a), -1, _shape, x,y);
        t = t + 1;
    end
end

_load_level(0);

var Soldier s;

/*
class Stack with
    var int n;
    vat int *s;
do
    _memset(s,0,n);
    
end
*/