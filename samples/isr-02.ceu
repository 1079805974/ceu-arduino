/*
 * TIMER-CTC => LED, BUTTON => PAUSE/RESTART
 * Runs a timer on CTC mode, e.g., every 500ms generates an interrupt.
 * Interrupt generates "emit 500ms" to the application.
 * Also uses PIN02 interrupts from the previous example.
 * Main program blinks LED connected to PIN13 every 500ms.
 * Button click freezes the LED for 2s.
 * (http://letsmakerobots.com/node/28278)
 */

input int PIN02;

_pinMode(13, _OUTPUT);
_pinMode( 2, _INPUT);

par do
    // initialize timer1 
    atomic do
        _TCCR1A = 0;
        _TCCR1B = 0;
        _TCNT1  = 0;
        _OCR1A = 31250; // compare match register 16MHz/256/2Hz
        _TCCR1B = _TCCR1B | (1 << _WGM12);   // CTC mode
        _TCCR1B = _TCCR1B | (1 << _CS12);    // 256 prescaler
        _TIMSK1 = _TIMSK1 | (1 << _OCIE1A);  // enable timer compare interrupt
    end

    async/isr (_TIMER1_COMPA_vect_num, 0) do
        emit 500ms;
    end
with
    async/isr (_digitalPinToInterrupt(2),_CHANGE) do
        emit PIN02 => _digitalRead(2);
    end
with
    loop do
        watching PIN02 do
            var int x = 0;
            every 500ms do
                x = not x;
                _digitalWrite(13, x);
            end
        end
        await 2s;
    end
end
