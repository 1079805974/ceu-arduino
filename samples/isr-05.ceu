/*
 * TIMER-OVF/WCLOCK_SET => LED, BUTTON+BUTTON => RESTART
 * Runs a timer on OVERFLOW mode, restarting on every await (wclock_set).
 * Interrupt generates "emit 500ms" to the application.
 * Also uses PIN02 interrupts from the previous example.
 * Main program blinks LED connected to PIN13 every 500ms.
 * Button click freezes until next click.
 * (http://letsmakerobots.com/node/28278)
 */

native/pre do
    static s32 US = CEU_WCLOCK_INACTIVE;
    ##define ceu_out_wclock_set(us) ceu_sys_wclock_set(us)
    void ceu_sys_wclock_set (s32 us) {
        ceu_out_isr_off();
        if (us == CEU_WCLOCK_INACTIVE) {
            TIMSK1 = TIMSK1 & ~(1 << TOIE1);
        } else {
            US = us;
            s32 ms = us / 1000;
            us = us % 1000;
            TCNT1 = us*34286/500/1000 + ms*34286/500;    // 2hz/500/1000
            TIMSK1 = TIMSK1 | (1 << TOIE1);
        }
        ceu_out_isr_on();
    }
end

input int PIN02;

_pinMode(13, _OUTPUT);
_pinMode( 2, _INPUT);

par do
    atomic do
        _TCCR1A = 0;
        _TCCR1B = 0;
        _TCCR1B = _TCCR1B | (1 << _CS12);
    end
    async/isr (_TIMER1_OVF_vect_num, 0) do
        emit (_US)us;
    end
    await FOREVER;
with
    async/isr (_digitalPinToInterrupt(2),_CHANGE) do
        emit PIN02 => _digitalRead(2);
    end
    await FOREVER;
with
    loop do
        watching PIN02 do
            var int x = 0;
            every 500ms do
                x = not x;
                _digitalWrite(13, x);
            end
        end
        await PIN02;
    end
end
